# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import service_pb2 as proto_dot_service__pb2


class TestServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UnaryUnary = channel.unary_unary(
        '/TestService/UnaryUnary',
        request_serializer=proto_dot_service__pb2.Request.SerializeToString,
        response_deserializer=proto_dot_service__pb2.Response.FromString,
        )
    self.UnaryStream = channel.unary_stream(
        '/TestService/UnaryStream',
        request_serializer=proto_dot_service__pb2.Request.SerializeToString,
        response_deserializer=proto_dot_service__pb2.Response.FromString,
        )
    self.StreamUnary = channel.stream_unary(
        '/TestService/StreamUnary',
        request_serializer=proto_dot_service__pb2.Request.SerializeToString,
        response_deserializer=proto_dot_service__pb2.Response.FromString,
        )
    self.StreamStream = channel.stream_stream(
        '/TestService/StreamStream',
        request_serializer=proto_dot_service__pb2.Request.SerializeToString,
        response_deserializer=proto_dot_service__pb2.Response.FromString,
        )


class TestServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def UnaryUnary(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnaryStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamUnary(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TestServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UnaryUnary': grpc.unary_unary_rpc_method_handler(
          servicer.UnaryUnary,
          request_deserializer=proto_dot_service__pb2.Request.FromString,
          response_serializer=proto_dot_service__pb2.Response.SerializeToString,
      ),
      'UnaryStream': grpc.unary_stream_rpc_method_handler(
          servicer.UnaryStream,
          request_deserializer=proto_dot_service__pb2.Request.FromString,
          response_serializer=proto_dot_service__pb2.Response.SerializeToString,
      ),
      'StreamUnary': grpc.stream_unary_rpc_method_handler(
          servicer.StreamUnary,
          request_deserializer=proto_dot_service__pb2.Request.FromString,
          response_serializer=proto_dot_service__pb2.Response.SerializeToString,
      ),
      'StreamStream': grpc.stream_stream_rpc_method_handler(
          servicer.StreamStream,
          request_deserializer=proto_dot_service__pb2.Request.FromString,
          response_serializer=proto_dot_service__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TestService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
